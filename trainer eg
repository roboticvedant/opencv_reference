import os
from PIL import Image
import numpy as np
import cv2 as cv
import pickle
BASE_DIR = os.path.dirname(os.path.abspath(__file__))
image_dir = os.path.join(BASE_DIR,"img")
current_id=0
label_ids = {}
x_train = []
y_labels = []
face_cascade=cv.CascadeClassifier('data/haarcascade_frontalface_alt2.xml')

recognizer = cv.face.LBPHFaceRecognizer_create() # if you get error try adding opencv-contib-python library

for root,dirs, files in os.walk(image_dir):
    for file in files:
        if file.endswith('jpg'):
            path = os.path.join(root, file)
            label = os.path.basename(os.path.dirname(path)).replace(" ","-").lower()
            print(label,path)
            if not label in label_ids:
                label_ids[label] = current_id
                current_id+=1
            id_ = label_ids[label]
            print(label_ids)
            pil_image = Image.open(path).convert("L")
            image_array = np.array(pil_image,'uint8')
            #y_labels.append(label)
            #x_train.append(path)
            print(image_array)
            face = face_cascade.detectMultiScale(image_array)
            for (x,y,w,h) in face:
                roi = image_array[y:y+h,x:x+w]
                x_train.append(roi)
                y_labels.append(id_)


#print(y_labels)
#print(x_train)

with open("labels.pickle",'wb') as f:
    pickle.dump(label_ids, f)
recognizer.train(x_train,np.array(y_labels))
recognizer.save("trainer.yml")
